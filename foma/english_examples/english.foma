### english.foma ###

# Vowels
define V [ a | e | i | o | u ];
define C [ b | c | d | f | g | h | j | k | l | m | n | p | q | r | s | t | v | w | x | y | z ];

define OrthWord [C* V+ C*]+;

read lexc english-guess.lexc
substitute defined OrthWord for "NOUNGUESS"
define Lexicon;

# Consonant doubling: 1-letter consonant doubled before -ing/-ed (beg/begging)
define ConsonantDoubling g -> g g || _ "^" [i n g | e d ];

# E deletion: silent e dropped before -ing and -ed (make/making)
define EDeletion e -> 0 || _ "^" [ i n g | e d ] ;

# E insertion e added after -s, -z, -x, -ch, -sh before s (watch/watches)
define EInsertion [..] -> e || s | z | x | c h | s h _ "^" s ;

# Y replacement: -y changes to -ie before -s, -i before -ed (try/tries)
define YReplacement y -> i e || _ "^" s    ,,
                    y -> i   || _ "^" e d  ;

# K insertion: verbs ending with vowel + -c add -k (panic/panicked)
define KInsertion [..] -> k || V c _ "^" [e d | i n g];

# Cleanup: remove morpheme boundaries
define Cleanup "^" -> 0;

#def PriorityUnionOutput(A,B) [A | [B .o. ~A.l]];
def PriorityUnionOutput(A,B) [A .p. B];
# same as A .p. B


define Grammar Lexicon           .o.
               ConsonantDoubling .o.
               EDeletion         .o.
               EInsertion        .o.
               YReplacement      .o.
               KInsertion        .o.
               Cleanup;

#regex Grammar;
regex PriorityUnionOutput(
 ~$["GUESS+"] .o. Grammar,
 $["GUESS+"] .o. Grammar
);